[{"/Users/danielwright/Desktop/unit3/Front-end/anywhere-fitness/src/index.js":"1","/Users/danielwright/Desktop/unit3/Front-end/anywhere-fitness/src/App.js":"2","/Users/danielwright/Desktop/unit3/Front-end/anywhere-fitness/src/reportWebVitals.js":"3","/Users/danielwright/Desktop/unit3/Front-end/anywhere-fitness/src/Theme.js":"4","/Users/danielwright/Desktop/unit3/Front-end/anywhere-fitness/src/components/Signup.js":"5","/Users/danielwright/Desktop/unit3/Front-end/anywhere-fitness/src/components/Login.js":"6","/Users/danielwright/Desktop/unit3/Front-end/anywhere-fitness/src/components/AddClass.js":"7","/Users/danielwright/Desktop/unit3/Front-end/anywhere-fitness/src/components/Home.js":"8","/Users/danielwright/Desktop/unit3/Front-end/anywhere-fitness/src/validation/SignupSchema.js":"9","/Users/danielwright/Desktop/unit3/Front-end/anywhere-fitness/src/validation/ClassSchema.js":"10","/Users/danielwright/Desktop/unit3/Front-end/anywhere-fitness/src/utils/axiosWithAuth.js":"11","/Users/danielwright/Desktop/unit3/Front-end/anywhere-fitness/src/components/Cards.js":"12","/Users/danielwright/Desktop/unit3/Front-end/anywhere-fitness/src/utils/PrivateRoute.js":"13","/Users/danielwright/Desktop/unit3/Front-end/anywhere-fitness/src/components/EditClass.js":"14"},{"size":675,"mtime":1612380632774,"results":"15","hashOfConfig":"16"},{"size":6119,"mtime":1612470388941,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1612380632775,"results":"18","hashOfConfig":"16"},{"size":65,"mtime":1612386750618,"results":"19","hashOfConfig":"16"},{"size":2938,"mtime":1612380632773,"results":"20","hashOfConfig":"16"},{"size":1364,"mtime":1612380632773,"results":"21","hashOfConfig":"16"},{"size":5616,"mtime":1612471885122,"results":"22","hashOfConfig":"16"},{"size":758,"mtime":1612464596511,"results":"23","hashOfConfig":"16"},{"size":691,"mtime":1612380632775,"results":"24","hashOfConfig":"16"},{"size":642,"mtime":1612394889945,"results":"25","hashOfConfig":"16"},{"size":290,"mtime":1612380632775,"results":"26","hashOfConfig":"16"},{"size":953,"mtime":1612470145039,"results":"27","hashOfConfig":"16"},{"size":390,"mtime":1612380632775,"results":"28","hashOfConfig":"16"},{"size":4981,"mtime":1612469373923,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1tbbzft",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},"/Users/danielwright/Desktop/unit3/Front-end/anywhere-fitness/src/index.js",[],["61","62"],"/Users/danielwright/Desktop/unit3/Front-end/anywhere-fitness/src/App.js",[],"/Users/danielwright/Desktop/unit3/Front-end/anywhere-fitness/src/reportWebVitals.js",[],"/Users/danielwright/Desktop/unit3/Front-end/anywhere-fitness/src/Theme.js",["63"],"export default {\n  linkBGColor: \"gray\",\n  headColor: \"white\",\n};\n","/Users/danielwright/Desktop/unit3/Front-end/anywhere-fitness/src/components/Signup.js",[],"/Users/danielwright/Desktop/unit3/Front-end/anywhere-fitness/src/components/Login.js",[],"/Users/danielwright/Desktop/unit3/Front-end/anywhere-fitness/src/components/AddClass.js",[],"/Users/danielwright/Desktop/unit3/Front-end/anywhere-fitness/src/components/Home.js",[],"/Users/danielwright/Desktop/unit3/Front-end/anywhere-fitness/src/validation/SignupSchema.js",[],"/Users/danielwright/Desktop/unit3/Front-end/anywhere-fitness/src/validation/ClassSchema.js",[],"/Users/danielwright/Desktop/unit3/Front-end/anywhere-fitness/src/utils/axiosWithAuth.js",[],"/Users/danielwright/Desktop/unit3/Front-end/anywhere-fitness/src/components/Cards.js",[],"/Users/danielwright/Desktop/unit3/Front-end/anywhere-fitness/src/utils/PrivateRoute.js",[],"/Users/danielwright/Desktop/unit3/Front-end/anywhere-fitness/src/components/EditClass.js",["64"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport axiosWithAuth from \"../utils/axiosWithAuth\";\n\nconst initialEditFormValues = {\n  name: \"\",\n  type: \"\",\n  start_time: \"\",\n  duration: null,\n  intensity_level: \"\",\n  location: \"\",\n  attendees: null,\n  max_size: null,\n  instructor_username: \"\",\n};\n\nexport default function EditClass(props) {\n  const [editFormValues, setEditFormValues] = useState(initialEditFormValues);\n  // const {\n  //   name,\n  //   type,\n  //   start_time,\n  //   duration,\n  //   intensity_level,\n  //   location,\n  //   max_size,\n  // } = props.details;\n  const { submit, errors } = props;\n  const { id } = useParams();\n  console.log(editFormValues, \"look at me!\");\n  const { push } = useHistory();\n\n  const handleChange = (evt) => {\n    const { name, value } = evt.target;\n    setEditFormValues({ ...editFormValues, [name]: value });\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    axiosWithAuth()\n      .put(\n        `https://anywhere-fitness-tt42.herokuapp.com/api/classes/${id}`,\n        editFormValues\n      )\n      .then((res) => {\n        console.log(res.details);\n        push(\"/home\");\n      });\n    submit();\n  };\n\n  useEffect(() => {\n    axiosWithAuth()\n      .get(`https://anywhere-fitness-tt42.herokuapp.com/api/classes/${id}`)\n      .then((res) => {\n        setEditFormValues(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <div>\n      <StyledForm>\n        <div>\n          <label>\n            {\" \"}\n            Name:\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={editFormValues.name}\n              onChange={handleChange}\n            />\n          </label>\n          <span>{errors.name}</span>\n        </div>\n        <div>\n          <label>\n            {\" \"}\n            Type:\n            <input\n              type=\"text\"\n              name=\"type\"\n              value={editFormValues.type}\n              onChange={handleChange}\n            />\n          </label>\n          <span>{errors.type}</span>\n        </div>\n        <div>\n          <label>\n            {\" \"}\n            Start time:\n            <input\n              type=\"text\"\n              name=\"start_time\"\n              value={editFormValues.start_time}\n              onChange={handleChange}\n            />\n          </label>\n          <span>{errors.start_time}</span>\n        </div>\n        <div>\n          <label>\n            {\" \"}\n            Duration:\n            <input\n              type=\"text\"\n              name=\"duration\"\n              value={editFormValues.duration}\n              onChange={handleChange}\n            />\n          </label>\n          <span>{errors.duration}</span>\n        </div>\n        <div>\n          <label>\n            {\" \"}\n            Intensity level:\n            <select\n              name=\"intensity_level\"\n              value={editFormValues.intensity_level}\n              onChange={handleChange}\n            >\n              <option value=\"\">--select intensity--</option>\n              <option value=\"easy\">Easy</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"intense\">Intense</option>\n            </select>\n          </label>\n          <span>{errors.intensity_level}</span>\n        </div>\n        <div>\n          <label>\n            {\" \"}\n            Location:\n            <input\n              type=\"text\"\n              name=\"location\"\n              value={editFormValues.location}\n              onChange={handleChange}\n            />\n          </label>\n          <span>{errors.location}</span>\n        </div>\n        <div>\n          <label>\n            {\" \"}\n            Max size:\n            <input\n              type=\"number\"\n              name=\"max_size\"\n              value={editFormValues.max_size}\n              onChange={handleChange}\n            />\n          </label>\n          <span>{errors.max_size}</span>\n          <label>\n            {\" \"}\n            attendees:\n            <input\n              type=\"number\"\n              name=\"attendees\"\n              value={editFormValues.attendees}\n              onChange={handleChange}\n            />\n          </label>\n          <span>{errors.attendees}</span>\n        </div>\n        <button onClick={handleSubmit}>Submit changes</button>\n      </StyledForm>\n    </div>\n  );\n}\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: space-evenly;\n  align-items: flex-start;\n  margin-left: 20%;\n\n  label {\n    color: white;\n    text-shadow: 1px 1px black;\n    font-weight: bold;\n    font-size: 1.5rem;\n  }\n\n  input {\n    font-size: 1rem;\n  }\n\n  span {\n    color: red;\n    text-shadow: 1px 1px black;\n    font-weight: bold;\n    font-size: 1rem;\n    margin-left: 2%;\n    display: block;\n  }\n\n  button {\n    background: white;\n    margin-left: 20%;\n  }\n\n  div {\n    margin: 3%;\n  }\n`;\n",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":1,"nodeType":"71","endLine":4,"endColumn":3},{"ruleId":"72","severity":1,"message":"73","line":62,"column":6,"nodeType":"74","endLine":62,"endColumn":8,"suggestions":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["78"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},"Update the dependencies array to be: [id]",{"range":"81","text":"82"},[1524,1526],"[id]"]